# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ont_pb2 as ont__pb2


class ONTServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateONTID = channel.unary_unary(
        '/ont.ONTService/CreateONTID',
        request_serializer=ont__pb2.RequestData.SerializeToString,
        response_deserializer=ont__pb2.ResponseData.FromString,
        )
    self.DeleteONTID = channel.unary_unary(
        '/ont.ONTService/DeleteONTID',
        request_serializer=ont__pb2.RequestData.SerializeToString,
        response_deserializer=ont__pb2.ResponseData.FromString,
        )
    self.ContractONTIDRegister = channel.unary_unary(
        '/ont.ONTService/ContractONTIDRegister',
        request_serializer=ont__pb2.RequestData.SerializeToString,
        response_deserializer=ont__pb2.ResponseData.FromString,
        )
    self.ContractPutBatch = channel.unary_unary(
        '/ont.ONTService/ContractPutBatch',
        request_serializer=ont__pb2.RequestData.SerializeToString,
        response_deserializer=ont__pb2.ResponseData.FromString,
        )


class ONTServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CreateONTID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteONTID(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ContractONTIDRegister(self, request, context):
    """/api/v1/contract/ontid/register
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ContractPutBatch(self, request, context):
    """/api/v1/contract/put/batch
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ONTServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateONTID': grpc.unary_unary_rpc_method_handler(
          servicer.CreateONTID,
          request_deserializer=ont__pb2.RequestData.FromString,
          response_serializer=ont__pb2.ResponseData.SerializeToString,
      ),
      'DeleteONTID': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteONTID,
          request_deserializer=ont__pb2.RequestData.FromString,
          response_serializer=ont__pb2.ResponseData.SerializeToString,
      ),
      'ContractONTIDRegister': grpc.unary_unary_rpc_method_handler(
          servicer.ContractONTIDRegister,
          request_deserializer=ont__pb2.RequestData.FromString,
          response_serializer=ont__pb2.ResponseData.SerializeToString,
      ),
      'ContractPutBatch': grpc.unary_unary_rpc_method_handler(
          servicer.ContractPutBatch,
          request_deserializer=ont__pb2.RequestData.FromString,
          response_serializer=ont__pb2.ResponseData.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ont.ONTService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
